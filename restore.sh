#!/bin/bash

# Keycloak Restore Script
# Ez a script vissza√°ll√≠tja a Keycloak realm-et egy backup f√°jlb√≥l

BACKUP_DIR="./keycloak-backup"
REALM_NAME="biometric-2fa"

# Sz√≠nek
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# F√ºggv√©nyek
print_success() {
    echo -e "${GREEN}‚úì${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}‚ö†${NC} $1"
}

print_error() {
    echo -e "${RED}‚úó${NC} $1"
}

print_info() {
    echo -e "${BLUE}‚Ñπ${NC} $1"
}

echo "üîÑ Keycloak Restore Script"
echo "=========================="
echo ""

# Param√©ter ellen≈ërz√©s
if [ -z "$1" ]; then
    echo "Haszn√°lat: bash restore.sh <backup-f√°jl.json>"
    echo ""
    echo "El√©rhet≈ë backup f√°jlok:"
    ls -1 "$BACKUP_DIR"/*backup*.json 2>/dev/null | sed 's/.*\//   /'
    echo ""
    exit 1
fi

BACKUP_FILE="$1"

# Ellen≈ërz√©s: teljes vagy relat√≠v √∫tvonal
if [ ! -f "$BACKUP_FILE" ]; then
    if [ -f "$BACKUP_DIR/$BACKUP_FILE" ]; then
        BACKUP_FILE="$BACKUP_DIR/$BACKUP_FILE"
    else
        print_error "Backup f√°jl nem tal√°lhat√≥: $BACKUP_FILE"
        exit 1
    fi
fi

print_info "Backup f√°jl: $BACKUP_FILE"
FILE_SIZE=$(du -h "$BACKUP_FILE" | cut -f1)
echo "   F√°jl m√©ret: $FILE_SIZE"
echo ""

# Meger≈ës√≠t√©s k√©r√©se
read -p "‚ö†Ô∏è  Figyelem! Ez t√∂rli a jelenlegi realm-et √©s fel√ºl√≠rja a backup-pal. Folytatod? (y/N): " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    print_warning "Restore megszak√≠tva"
    exit 0
fi

# 1. Realm t√∂rl√©se (opcion√°lis)
echo ""
echo "1Ô∏è‚É£  Jelenlegi realm t√∂rl√©se..."

# Admin token megszerz√©se
TOKEN=$(curl -k -s -X POST "https://localhost:8443/realms/master/protocol/openid-connect/token" \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "username=admin" \
  -d "password=admin123" \
  -d "grant_type=password" \
  -d "client_id=admin-cli" | grep -o '"access_token":"[^"]*"' | cut -d'"' -f4)

if [ -z "$TOKEN" ]; then
    print_error "Admin token megszerz√©se sikertelen"
    exit 1
fi

print_success "Admin token megszerzve"

# Realm t√∂rl√©se
RESPONSE=$(curl -k -s -o /dev/null -w "%{http_code}" -X DELETE \
  "https://localhost:8443/admin/realms/${REALM_NAME}" \
  -H "Authorization: Bearer $TOKEN")

if [ "$RESPONSE" = "204" ]; then
    print_success "R√©gi realm t√∂r√∂lve"
elif [ "$RESPONSE" = "404" ]; then
    print_info "Realm nem l√©tezett (els≈ë telep√≠t√©s)"
else
    print_warning "Realm t√∂rl√©se kihagyva (HTTP $RESPONSE)"
fi

sleep 2

# 2. √öj realm import√°l√°sa
echo ""
echo "2Ô∏è‚É£  Realm import√°l√°sa backup f√°jlb√≥l..."

# √öj token, mert a r√©gi lehet, hogy lej√°rt
TOKEN=$(curl -k -s -X POST "https://localhost:8443/realms/master/protocol/openid-connect/token" \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "username=admin" \
  -d "password=admin123" \
  -d "grant_type=password" \
  -d "client_id=admin-cli" | grep -o '"access_token":"[^"]*"' | cut -d'"' -f4)

# Realm import
RESPONSE=$(curl -k -s -w "\n%{http_code}" -X POST \
  "https://localhost:8443/admin/realms" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" \
  -d @"$BACKUP_FILE")

HTTP_CODE=$(echo "$RESPONSE" | tail -n1)

if [ "$HTTP_CODE" = "201" ] || [ "$HTTP_CODE" = "200" ]; then
    print_success "Realm sikeresen import√°lva!"
else
    print_error "Realm import sikertelen (HTTP $HTTP_CODE)"
    echo "V√°lasz: $(echo "$RESPONSE" | head -n-1)"

    echo ""
    print_info "Alternat√≠v megold√°s: Manu√°lis import"
    echo "1. Nyisd meg: https://localhost:8443/admin"
    echo "2. V√°lts a 'master' realm-re"
    echo "3. Menj: Realm Settings ‚Üí Action ‚Üí Partial Import"
    echo "4. T√∂ltsd fel: $BACKUP_FILE"
    echo "5. V√°laszd ki mit import√°lsz"
    echo "6. Kattints 'Import'"
    exit 1
fi

# 3. Realm be√°ll√≠t√°sok ellen≈ërz√©se
echo ""
echo "3Ô∏è‚É£  Import ellen≈ërz√©se..."

sleep 2

# Realm lek√©rdez√©se
REALM_INFO=$(curl -k -s -X GET \
  "https://localhost:8443/admin/realms/${REALM_NAME}" \
  -H "Authorization: Bearer $TOKEN")

if echo "$REALM_INFO" | grep -q "\"realm\":\"${REALM_NAME}\""; then
    print_success "Realm l√©trehozva √©s el√©rhet≈ë"

    # Felhaszn√°l√≥k sz√°ma
    USERS_COUNT=$(curl -k -s -X GET \
      "https://localhost:8443/admin/realms/${REALM_NAME}/users/count" \
      -H "Authorization: Bearer $TOKEN")

    print_info "Felhaszn√°l√≥k sz√°ma: $USERS_COUNT"

    # WebAuthn Policy ellen≈ërz√©se
    WEBAUTHN_POLICY=$(echo "$REALM_INFO" | grep -o '"webAuthnPolicyAuthenticatorAttachment":"[^"]*"' | cut -d'"' -f4)
    print_info "WebAuthn Policy: $WEBAUTHN_POLICY"
else
    print_error "Realm ellen≈ërz√©s sikertelen"
    exit 1
fi

# 4. Docker konfigur√°ci√≥ ellen≈ërz√©se
echo ""
echo "4Ô∏è‚É£  Docker konfigur√°ci√≥ ellen≈ërz√©se..."

if docker ps | grep -q keycloak; then
    print_success "Keycloak kont√©ner fut"
else
    print_warning "Keycloak kont√©ner nem fut"
    echo "   Ind√≠t√°s: docker-compose up -d"
fi

if docker ps | grep -q keycloak-postgres; then
    print_success "PostgreSQL kont√©ner fut"
else
    print_warning "PostgreSQL kont√©ner nem fut"
fi

# 5. √ñsszegz√©s
echo ""
echo "============================================"
echo "‚úÖ Restore sikeresen befejezve!"
echo "============================================"
echo ""
echo "üìç Keycloak Admin Console:"
echo "   https://localhost:8443/admin"
echo "   Admin: admin / admin123"
echo ""
echo "üìç Test felhaszn√°l√≥:"
echo "   Username: testuser"
echo "   Password: Test123"
echo ""
echo "üìç Angular App:"
echo "   http://localhost:4200"
echo ""
echo "üîê WebAuthn 2FA:"
echo "   - Els≈ë bejelentkez√©skor regisztr√°ld a biometrikus eszk√∂zt"
echo "   - T√°mogatott: ujjlenyomat, Face ID, Windows Hello"
echo "   - Telefonos QR k√≥dos m√≥dszer akt√≠v"
echo ""
echo "üìö Dokument√°ci√≥:"
echo "   - BIOMETRIC-2FA-SETUP.md"
echo "   - QR-CODE-2FA-SETUP.md"
echo "   - ADMIN-CONSOLE-GUIDE.md"
echo ""

# Gyors teszt aj√°nl√°s
echo "üß™ Gyors teszt:"
echo "   curl -k https://localhost:8443/realms/${REALM_NAME}"
echo ""
